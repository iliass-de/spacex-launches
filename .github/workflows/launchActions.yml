# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore ./server/launchApi/launchApi.csproj
    - name: Build
      run: dotnet build ./server/launchApi/launchApi.csproj --no-restore
    - name: Copy build
      run: cp -r ./server/launchApi/bin/Debug/net6.0/* ./server/launchApi/bin/Debug/net6.0/publish/
    - name: Depcheck
      uses: dependency-check/Dependency-Check_Action@main
      id: Depcheck
      with:
        project: 'launchApi'
        path: '.'
        format: 'HTML'
        out: 'reports'
        args: #>
          #--failOnCVSS 7
          --enableRetired
    - name: Upload results
      uses: actions/upload-artifact@v3
      with:
          name: Depcheck report
          path: reports
          if-no-files-found: error
          name: Build output
          path: ./server/launchApi/bin/Debug/net6.0/publish

  api-test:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Run
        run: dotnet ./server/launchApi/bin/Debug/net6.0/publish/launchApi.dll &
      - name: Prepare newman
        run: npm install -g newman
      - name: Run test with newman
        run: newman run ./server/tests/apiTests/launchApi.postman_collection.json --verbose 2>&1 | tee apiTest_report
      - name: Upload results
        uses: actions/upload-artifact@v3
        with:
          name: Api test report
          path: apiTest_report
          if-no-files-found: error

 